# Example Dev Environment Setup

name: ls_dev

services:
  # Laravel App
  ls_dev_app:
    build:
      context: .
      dockerfile: ./.docker/dev/Dockerfile
    container_name: ls_dev_app
    restart: on-failure
    ports:
      - ${APP_PORT}:8080
    volumes:
      - ./:/var/www/html
    environment:
      RUN_LARAVEL_AUTOMATIONS: 'true'
      AUTORUN_LARAVEL_CONFIG_CACHE: 'false'
      AUTORUN_ENABLED: 'true'
      AUTORUN_LARAVEL_STORAGE_LINK: 'true'
      SSL_MODE: 'off'
      PHP_POOL_NAME: 'app_pool'
      PHP_OPCACHE_ENABLE: '1'
    networks:
      - ls_dev_app_net
      - ls_dev_redis_net
    command: ['php', '/var/www/html/artisan', 'schedule:work']

  # Database
  ls_dev_db:
    image: postgres:latest
    container_name: ls_dev_db
    restart: unless-stopped
    ports:
      - ${DB_PORT}:5432
    volumes:
      - ls_dev_db_volume:/var/lib/postgresql/data
      - .docker/dev/database/postgres/docker-entrypoint-initdb:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - ls_dev_app_net

  # Redis
  ls_dev_redis:
    image: redis:alpine
    container_name: ls_dev_redis
    hostname: laravel_app_x
    restart: always
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - ls_dev_redis_net

  # Buggregator
  ls_dev_buggregator:
    image: ghcr.io/buggregator/server:latest
    container_name: ls_dev_buggregator
    restart: unless-stopped
    ports:
      - 8000:8000
      - 1025:1025
      - 9912:9912
      - 9913:9913
    networks:
      - ls_dev_app_net

networks:
  ls_dev_app_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.100.0.0/16

  ls_dev_redis_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.90.0.0/16

volumes:
  ls_dev_db_volume:
